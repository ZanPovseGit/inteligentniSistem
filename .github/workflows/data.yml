name: Data Download

on:
  push:
    branches:
      - master

jobs:
  check-api1:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check API 1
      run: |
        curl -sSf https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&daily=weather_code,temperature_2m_max,rain_sum || exit 1

  check-api2:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check API 2
      run: |
        curl -sSf https://api.jcdecaux.com/vls/v1/stations?contract=maribor&apiKey=5e150537116dbc1786ce5bec6975a8603286526b || exit 1

  download-data-script1:
    needs: check-api1
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8 

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
        
    - name: Run Python script
      run: python src/data/requestGit.py

  download-data-script2:
    needs: check-api2
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8 

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
        
    - name: Run Python script
      run: python src/data/weather.py

  download-data-script3:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8 

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
        
    - name: Run Python script
      run: python src/data/bike.py
  
  pushNpull:
    needs: download-data-script1
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Dependencies
      run: |
       pip install -r requirements.txt
       pip install dvc
       pip install dvc-s3

    - name: Set Git identity
      run: |
        git config --global user.email 'zan.povse11@gmail.com'
        git config --global user.name 'ZanPovseGit'

    - name: Run Great Expectations validation
      run: |
        python src/data/expect.py 




  dvc-push:
    needs: [download-data-script1, download-data-script2, download-data-script3]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Install DVC and dvc-s3
      run: |
        pip install dvc-s3
        pip install pyopenssl==24.0.0
      
    - name: Push data to DVC remote
      run: |
        dvc remote add ppl s3://dvc -f
        dvc remote modify ppl endpointurl https://dagshub.com/ZanPovseGit/inteligentniSistem.s3
        dvc remote modify ppl --local access_key_id bdf091cc3f58df2c8346bb8ce616545e0e40b351
        dvc remote modify ppl --local secret_access_key bdf091cc3f58df2c8346bb8ce616545e0e40b351
        dvc pull -r ppl
        dvc push -r ppl

